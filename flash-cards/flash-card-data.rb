flash_card_data = { array: [
  { type: 'ruby',
    variables: {},
    command: "[1,5,2] & [1,2]",
    output: "[1,2]",
    comment: "No change in original array",
    change_original: false
  },
  { type: 'ruby',
    variables: {},
    command: "['abc','abcd].sort_by{ |word| word.length }",
    output: "['abc','abcd']",
    comment: "No change in original array.",
    change_original: false
  },
  { type: 'ruby',
    variables: {},
    command: "[1,2,3].map{ |element| element += 1 }",
    output: "[2,3,4]",
    comment: "No change in original array.",
    change_original: false
  },
  { type: 'ruby',
    variables: {},
    command: "[nil,4,8,nil].compact",
    output: "[4,8]",
    comment: "No change in original array.",
    change_original: false
  },
  { type: 'ruby',
    variables: {},
    command: "[2,3,[5,6],[8,9,10]].flatten",
    output: "[2,3,5,6,8,9,10]",
    comment: "No change in original array.",
    change_original: false
  },
  { type: 'ruby',
    variables: {},
    command: "['a','b','c'].zip([1,2,3])",
    output: "[['a',1],['b',2],['c',3]]",
    comment: "No change in original array.",
    change_original: false
  },
  { type: 'ruby',
    variables: {},
    command: "[4,8,15].zip([42,43])",
    output: "[[4,42],[8,43],[15,nil]]",
    comment: "No change in original array.",
    change_original: false
  },
  { type: 'ruby',
    variables: { a: [2,1,3,4], b: [1,2,3,4] },
    command: "a2.sort_by{ |element| a.index(element) }",
    output: "[2,1,3,4]",
    comment: "No change in original array.",
    change_original: false
  },
  { type: 'ruby',
    variables: {},
    command: "[4,[8],[16,[23,42]]].flatten(1)",
    output: "[4,8,15,16,[23,42]]",
    comment: "No change in original array.",
    change_original: false
  },
  { type: 'ruby',
    variables: {},
    command: "[4,7,1].map{ |element| element + 1 }",
    output: "[5,8,2]",
    comment: "No change in original array.",
    change_original: false
  },
  { type: 'ruby',
    variables: {},
    command: "[1,2,3].shuffle",
    output: "[3,1,2]",
    comment: "No change in original array.",
    change_original: false
  },
  { type: 'ruby',
    variables: {},
    command: "[1,3,2,5,6].select{ |element| element > 3 }",
    output: "[5,6]",
    comment: "No change in original array.",
    change_original: false
  },
  { type: 'ruby',
    variables: {},
    command: "[2,2,1,3,3].uniq",
    output: "[2,1,3]",
    comment: "No change in original array.",
    change_original: false
  },
  { type: 'ruby',
    variables: {},
    command: "[[1,2],[3,4]].each{ |a,b| puts a }",
    output: "1 \n 3",
    comment: "No change in original array.",
    change_original: false
  },
  { type: 'ruby',
    variables: {},
    command: "[1,2,3,4,5].each_slice(2){ |slice| puts slice }",
    output: "[1,2] \n [3,4] \n [5] \n nil",
    comment: "No change in original array.",
    change_original: false
  },
  { type: 'ruby',
    variables: {},
    command: "[1,2,3,4].each_slice(2).to_a",
    output: "[[1,2],[3,4]]",
    comment: "No change in original array.",
    change_original: false
  },
  { type: 'ruby',
    variables: {},
    command: "[4,8,23,42].slice(2..3)",
    output: "[23,42]",
    comment: "No change in original array.",
    change_original: false
  },
  { type: 'ruby',
    variables: {},
    command: "[4,8,23,42].slice(2)",
    output: "23",
    comment: "No change in original array.",
    change_original: false
  },
  { type: 'ruby',
    variables: { arr: ['a','b','c']},
    command: "arr.each_with_index{ |char, index| puts '#{index}. #{char}' }",
    output: "1. a\n2. b\n3. c",
    comment: "No change in original array.",
    change_original: false
  },
  { type: 'ruby',
    variables: { arr: [1,2,3] },
    command: "arr[0..1].each{ |element| puts element }",
    output: "1\n2",
    comment: "No change in original array.",
    change_original: false
  },
  { type: 'ruby',
    variables: {},
    command: "[4,3,1,2].values_at 0,1",
    output: "[4,3]",
    comment: "No change in original array.",
    change_original: false
  },
  { type: 'ruby',
    variables: {},
    command: "[1,2,3].fetch(100,'oops')",
    output: "oops",
    comment: "oops is an error message due to index out of bounds. 100 is the index. No change in the original array.",
    change_original: false
  },
  { type: 'ruby',
    variables: {},
    command: "[1,2,3].take(2)",
    output: "[1,2]",
    comment: "No change in original array.",
    change_original: false
  },
  { type: 'ruby',
    variables: {},
    command: "[4,5,6,7].drop(3)",
    output: "[7]",
    comment: "No change in original array.",
    change_original: false
  },
  { type: 'ruby',
    variables: {},
    command: "[1,2,3,0].drop_while{ |element| element < 3 }",
    output: "[3,0]",
    comment: "No change in original array.",
    change_original: false
  },
  { type: 'ruby',
    variables: {arr: [1,2,3,4]},
    command: "a[0..2]",
    output: "[1,2,3]",
    comment: "No change in original array.",
    change_original: false
  },
  { type: 'ruby',
    variables: {},
    command: "['a','c',7] == ['a','c',7]",
    output: "true",
    comment: "",
    change_original: nil
  },
  { type: 'ruby',
    variables: {},
    command: "['a','c'] == ['a','c',7]",
    output: "false",
    comment: "",
    change_original: nil
  },
  { type: 'ruby',
    variables: {},
    command: "[1,2,3] <=> [1,2,3]",
    output: "0",
    comment: "",
    change_original: nil
  },
  { type: 'ruby',
    variables: {},
    command: "[1,2] <=> [1,:two]",
    output: "nil",
    comment: "",
    change_original: nil
  },
  { type: 'ruby',
    variables: {},
    command: "[1,2,3,4] <=> [1,2]",
    output: "1",
    comment: "",
    change_original: nil
  },
  { type: 'ruby',
    variables: {},
    command: "['a','a','c'] <=> ['a','b','c']",
    output: "-1",
    comment: "",
    change_original: nil
  },
  { type: 'ruby',
    variables: {},
    command: "",
    output: "",
    comment: "",
    change_original: false
  },
  { type: 'ruby',
    variables: {},
    command: "",
    output: "",
    comment: "",
    change_original: false
  },
  { type: 'ruby',
    variables: {},
    command: "",
    output: "",
    comment: "",
    change_original: false
  },
  { type: 'ruby',
    variables: {},
    command: "",
    output: "",
    comment: "",
    change_original: false
  },
  { type: 'ruby',
    variables: {},
    command: "",
    output: "",
    comment: "",
    change_original: false
  },
  { type: 'ruby',
    variables: {},
    command: "",
    output: "",
    comment: "",
    change_original: false
  },
  { type: 'ruby',
    variables: {},
    command: "",
    output: "",
    comment: "",
    change_original: false
  },
  { type: 'ruby',
    variables: {},
    command: "",
    output: "",
    comment: "",
    change_original: false
  },
  { type: 'ruby',
    variables: {},
    command: "",
    output: "",
    comment: "",
    change_original: false
  },
  { type: 'ruby',
    variables: {},
    command: "",
    output: "",
    comment: "",
    change_original: false
  }


]
}

flash_card_data[:array].each do |command|
  puts command[:command]
end